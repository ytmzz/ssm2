<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ytmzz.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.ytmzz.pojo.Student">
    <id column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="student_name" jdbcType="CHAR" property="studentName" />
    <result column="student_age" jdbcType="INTEGER" property="studentAge" />
    <result column="student_status" jdbcType="CHAR" property="studentStatus" />
    <result column="student_graduation" jdbcType="CHAR" property="studentGraduation" />
    <result column="student_company" jdbcType="INTEGER" property="studentCompany" />
  </resultMap>
  <sql id="Base_Column_List">
    student_id, class_id, student_name, student_age, student_status, student_graduation, 
    student_company
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ytmzz.pojo.Student">
    insert into student (student_id, class_id, student_name, 
      student_age, student_status, student_graduation, 
      student_company)
    values (#{studentId,jdbcType=INTEGER}, #{classId,jdbcType=INTEGER}, #{studentName,jdbcType=CHAR}, 
      #{studentAge,jdbcType=INTEGER}, #{studentStatus,jdbcType=CHAR}, #{studentGraduation,jdbcType=CHAR}, 
      #{studentCompany,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ytmzz.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentAge != null">
        student_age,
      </if>
      <if test="studentStatus != null">
        student_status,
      </if>
      <if test="studentGraduation != null">
        student_graduation,
      </if>
      <if test="studentCompany != null">
        student_company,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=CHAR},
      </if>
      <if test="studentAge != null">
        #{studentAge,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null">
        #{studentStatus,jdbcType=CHAR},
      </if>
      <if test="studentGraduation != null">
        #{studentGraduation,jdbcType=CHAR},
      </if>
      <if test="studentCompany != null">
        #{studentCompany,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ytmzz.pojo.Student">
    update student
    <set>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=CHAR},
      </if>
      <if test="studentAge != null">
        student_age = #{studentAge,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null">
        student_status = #{studentStatus,jdbcType=CHAR},
      </if>
      <if test="studentGraduation != null">
        student_graduation = #{studentGraduation,jdbcType=CHAR},
      </if>
      <if test="studentCompany != null">
        student_company = #{studentCompany,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ytmzz.pojo.Student">
    update student
    set class_id = #{classId,jdbcType=INTEGER},
      student_name = #{studentName,jdbcType=CHAR},
      student_age = #{studentAge,jdbcType=INTEGER},
      student_status = #{studentStatus,jdbcType=CHAR},
      student_graduation = #{studentGraduation,jdbcType=CHAR},
      student_company = #{studentCompany,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>

  <!-- 自定义-->
  <select id="selectCountByClassId" parameterType="int" resultType="int">
    select count(1) from student where class_id = #{classId}
  </select>

  <select id="isExist" resultType="int" parameterType="int">
    select 1 from student where student_id = #{studentId}
  </select>

  <select id="selectByCondition" parameterType="StudentCondition" resultMap="referenceMap">
    select * from student
    <where>
      <if test="conditionStudentName != null and conditionStudentName != ''">
        <bind name="studentName" value="'%' + conditionStudentName + '%'" />
        and student_name like #{studentName}
      </if>
      <if test="conditionClassId != null">
        and class_id = #{conditionClassId}
      </if>
    </where>
  </select>

  <select id="getCountByCondition" parameterType="StudentCondition" resultType="int">
    select count(1) from student
    <where>
      <if test="conditionStudentName != null and conditionStudentName != ''">
        <bind name="studentName" value="'%' + conditionStudentName + '%'" />
        and student_name like #{studentName}
      </if>
      <if test="conditionClassId != null">
        and class_id = #{conditionClassId}
      </if>
    </where>
  </select>

  <select id="selectByClassId" parameterType="int" resultMap="BaseResultMap">
    select * from student
    where class_id = #{classId}
  </select>

  <resultMap id="referenceMap" type="com.ytmzz.pojo.Student" extends="BaseResultMap">
    <association property="classInfo" column="class_id" select="com.ytmzz.dao.ClassInfoMapper.selectByPrimaryKey" fetchType="lazy" />
  </resultMap>
</mapper>